#!/usr/bin/env python
import random
import string
from LevenshteinDistance import editdistance

choices = ['insert', 'replace', 'delete']

def fitness(current, target):
   fitness = editdistance(current,target)**2
   return fitness

def mutate(current):
   choice = choices[random.randint(0,2)]
   i = random.randint(0,len(current)-1)
   if choice == 'insert':
       mutated = current[:i] + random.choice(string.printable) + current[i:]
   elif choice == 'replace':
       mutated = current[:i] + random.choice(string.printable) + current[i+1:]
   else: # choice == 'delete'
       mutated = current[:i] + current[i+1:]

   return mutated

def print_gen(gen, fitness, string):
    print "%8i %8i %20s" % (gen, fitness, string)

###### MAIN ######
def main():
    # Initialize first generation
    gen = 1
    current = "a"
    target = "Hello, World!"
    current_fitness = fitness(current, target)

    # Print first gen
    print_gen(gen,current_fitness, current)

    while True:
        gen+=1
        successor = mutate(current)
        successor_fitness = fitness(successor, target)
        if successor_fitness < current_fitness:
            current = successor
            current_fitness = successor_fitness
            print_gen(gen,current_fitness, current)
        if current_fitness == 0:
            break

if __name__=="__main__":
    main()
